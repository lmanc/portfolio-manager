[project]
name = "portfoliomanager"
description = "A portfolio manager project that provides insights and rebalancing strategies for an investment portfolio. The project incorporates unit testing and follows a test-driven development approach."
readme = "README.md"
requires-python = ">=3.10"
version = "0.1"
authors = [
    { name = "Luca Mancusi", email = "luca.mancusi@protonmail.ch" },
    { name = "Moise Medici", email = "moise.medici@gmail.com" },
]
dependencies = [
    "pandas>=2.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.2",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.1",
    "ruff>=0.1.2",
]

[tool.ruff]
# Include Jupyter notebooks
include = ["*.py", "*.pyi", "**/pyproject.toml", "*.ipynb"]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# PEP8 all over the way
line-length = 79 # Used by both linter and E501
indent-width = 4

[tool.ruff.lint.pycodestyle]
max-doc-length = 72

[tool.ruff.lint]
select = [
    "A",     # flake8-builtins
    "ANN",   # flake8-annotations
    "ARG",   # flake8-unused-arguments
    "B",     # flake8-bugbear
    "BLE",   # flake8-blind-except
    "COM",   # flake8-commas
    "C4",    # flake8-comprehensions
    "C90",   # mccabe
    "D",     # pydocstyle
    "E",     # pycodestyle errors
    "ERA",   # eradicate
    "EM",    # flake8-errmsg
    "F",     # pyflakes
    "FBT",   # flake8-boolean-trap
    "FLY",   # flynt
    "FURB",  # refurb
    "G",     # flake8-logging-format
    "I",     # isort
    "ICN",   # flake8-import-conventions
    "INP",   # flake8-no-pep420
    "ISC",   # flake8-implicit-str-concat
    "N",     # pep8-naming
    "PD",    # pandas-vet
    "PERF",  # Perflint
    "PIE",   # flake8-pie
    "PL",    # Pylint
    "PTH",   # flake8-use-pathlib
    "PT",    # flake8-pytest-style
    "RET",   # flake8-return
    "RSE",   # flake8-raise
    "RUF",   # Ruff-specific rules
    "S",     # flake8-bandit
    "SIM",   # flake8-simplify
    "SLF",   # flake8-self
    "TID",   # flake8-tidy-imports
    "TRY",   # tryceratops
    "T10",   # flake8-debugger
    "UP",    # pyupgrade
    "W",     # pycodestyle warnings
]

ignore = [
    "E501", "W505", "PD901", #TODO
    "ANN101",  # missing-type-self
    "ANN102",  # missing-type-cls
    "ANN204",  # missing-return-type-special-method
    "COM812",  # missing-trailing-comma
    "D100",    # missing docstring in public module
    "D104",    # missing docstring in public package
    "W191",    # indentation contains tabs
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.extend-per-file-ignores]
"tests/*" = [
    "ANN",    # flake8-annotations
    "D",      # pydocstyle
    "INP001", # implicit-namespace-package
    "N802",   # invalid-function-name
    "S101",   # assert
    "S301",   # suspicious-pickle-usage
    "SLF001", # private-member-access
]


[tool.ruff.format]
# Use single quotes for strings.
quote-style = "single"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.pydocstyle]
convention = "google"
